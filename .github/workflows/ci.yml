name: CI

on: [push, pull_request]

jobs:
  build-ubuntu:
    strategy:
      matrix:
        platform: [ubuntu-latest,ubuntu-16.04]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt-get -qq update 
        apt-get install autoconf automake pkg-config libevent-dev libpcre3-dev libssl-dev
    - name: Build
      run: autoreconf -ivf && ./configure && make -j
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
        architecture: x64

    - name: Install Python dependencies
      run: pip install -r ./tests/test_requirements.txt

    - name: Cache Redis
      id: cache-redis
      uses: actions/cache@v1
      with:
        path: /home/runner/work/redis
        key: ${{ runner.os }}-redis

    - name: Install Redis Server test dependencies
      if: steps.cache-redis.outputs.cache-hit != 'true'
      run: |
        git clone git://github.com/antirez/redis.git --branch 6.2.2
        cd redis
        make BUILD_TLS=yes -j
        ./utils/gen-test-certs.sh
        ./src/redis-server --version
        cd ..

    - name: Test OSS TCP
      timeout: 10m
      run: |
        cd tests 
        MEMTIER_BINARY=./../memtier_benchmark \
        python3 -m RLTest \
        --env oss -v --clear-logs \
        --oss-redis-path ../redis/src/redis-server
        cd ..

    - name: Test OSS TCP TLS
      if: matrix.platform == 'ubuntu-latest'
      timeout: 10m
      run: |
        cd tests
        TLS_CERT=../redis/tests/tls/redis.crt \
        TLS_KEY=../redis/tests/tls/redis.key \
        TLS_CACERT=../redis/tests/tls/ca.crt \
        MEMTIER_BINARY=../memtier_benchmark \
        python3 -m RLTest \
          --env oss -v --clear-logs \
          --oss-redis-path ../redis/src/redis-server \
          --tls-cert-file ../redis/tests/tls/redis.crt \
          --tls-key-file ../redis/tests/tls/redis.key \
          --tls-ca-cert-file ../redis/tests/tls/ca.crt \
          --tls
        cd ..

    - name: Test OSS-CLUSTER TCP
      timeout: 10m
      run: |
        cd tests 
        MEMTIER_BINARY=./../memtier_benchmark \
        python3 -m RLTest \
        --env oss-cluster -v --clear-logs --shards-count 3 \
        --oss-redis-path ../redis/src/redis-server
        cd ..

    - name: Test OSS-CLUSTER TCP TLS
      timeout: 10m
      if: matrix.platform == 'ubuntu-latest'
      run: |
        cd tests
        TLS_CERT=../redis/tests/tls/redis.crt \
        TLS_KEY=../redis/tests/tls/redis.key \
        TLS_CACERT=../redis/tests/tls/ca.crt \
        MEMTIER_BINARY=../memtier_benchmark \
        python3 -m RLTest \
          --env oss-cluster --shards-count 3 -v --clear-logs \
          --oss-redis-path ../redis/src/redis-server \
          --tls-cert-file ../redis/tests/tls/redis.crt \
          --tls-key-file ../redis/tests/tls/redis.key \
          --tls-ca-cert-file ../redis/tests/tls/ca.crt \
          --tls
        cd ..

  build-macos:
    strategy:
      matrix:
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: brew install autoconf automake libtool libevent pkg-config openssl@1.1
    - name: Build
      run: autoreconf -ivf && PKG_CONFIG_PATH=/usr/local/opt/openssl@1.1/lib/pkgconfig ./configure && make
